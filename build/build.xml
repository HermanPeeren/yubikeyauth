<?xml version="1.0"?>
<project name="YubiKeyAuthPluginsJoomla" description="YubiKey Authentication PLugins for Joomla!" default="git" >
	
	<property file="./build.properties" />
	
	<!-- Default properties, set only if not already assigned in the build.properties file -->
	<property name="dirs.root" value=".." />
	<property name="dirs.translations" value="../translations" />
	<property name="dirs.plugins" value="../plugins" />
	<property name="dirs.modules" value="../modules" />
	<property name="dirs.release" value="../release" />
	<property name="version" value="git" />

	<property name="dirs.bin" value="bin" />
	<property name="dirs.bin.libxml" value="${dirs.bin}/libxml" />
	<property name="dirs.bin.fop" value="${dirs.bin}/fop" />
	<property name="dirs.bin.dbxsl" value="${dirs.bin}/dbxsl" />
	<property name="dirs.bin.release" value="../release" />

	<property name="dirs.documentation" value="../documentation" />

	<taskdef name="zipme" classname="phingext.ZipmeTask" />
	<taskdef name="lang" classname="phingext.LangTask" />
	<taskdef name="gitversion" classname="phingext.GitVersionTask" />

	<!--
	====================================================================================================
	File sets
	====================================================================================================
	-->

	<fileset dir="${dirs.plugins}/twofactorauth/yubikeyplus" id="tfa_yubikeyplus">
		<include name="**" />
	</fileset>

	<fileset dir="${dirs.plugins}/twofactorauth/yubikeytotp" id="tfa_yubikeytotp">
		<include name="**" />
	</fileset>

	<fileset dir="${dirs.plugins}/twofactorauth/u2f" id="tfa_u2f">
		<include name="**" />
	</fileset>

	<!--
	====================================================================================================
	Tasks - General
	====================================================================================================
	-->
	
	<target name="all" description="Makes everything"
		depends="git,lang">
	</target>

	<target name="git" description="Makes only packages, not the language packs"
		depends="new-release,setup-properties,package-all">
	</target>

	<target name="new-release" description="Create afresh the release directory">
		<!-- Create the release directory afresh -->
		<delete dir="${dirs.release}" quiet="true" includeemptydirs="true" />
		<mkdir dir="${dirs.release}" />
	</target>
	
	<target name="setup-properties" description="Set up version and build properties">
		<!-- Initialize the build.date timestamp -->
		<tstamp>
			<format property="build.date" pattern="%Y-%m-%d" />
		</tstamp>

		<!-- Initialize the version if it's not set -->
		<if>
			<equals arg1="${version}" arg2="git" />
			<then>
				<gitversion workingcopy="${dirs.root}" propertyname="git.lastrevision" />
				<property name="version" value="rev${git.lastrevision}" override="true" />
			</then>
		</if>
	</target>

	<!--
	====================================================================================================
	Tasks - Joomla! packages
	====================================================================================================
	-->

    <target name="package-all" description="Creates the pkg package"
            depends="package-yubikeyplus,package-yubikeytotp,package-u2f">
        <copy file="./templates/pkg_yubikey_plugins.xml" tofile="${dirs.release}/pkg_yubikey_plugins.xml" overwrite="true">
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="DATE" value="${build.date}" />
                    <token key="VERSION" value="${version}" />
                </replacetokens>
            </filterchain>
        </copy>

        <copy file="${dirs.root}/CHANGELOG" tofile="${dirs.release}/CHANGELOG" overwrite="true" />
        <copy file="${dirs.root}/LICENSE" tofile="${dirs.release}/LICENSE.txt" overwrite="true" />

        <!-- Create the pkg archive -->
        <zipme basedir="${dirs.release}" destfile="${dirs.release}/pkg_yubikey_plugins-${version}.zip" includeemptydirs="true">
            <fileset dir="${dirs.release}">
                <include name="pkg_*.xml" />
                <include name="CHANGELOG" />
                <include name="LICENSE.txt" />
            </fileset>
        </zipme>
        <zipme basedir="${dirs.release}" prefix="packages/" destfile="${dirs.release}/pkg_yubikey_plugins-${version}.zip" includeemptydirs="true">
            <fileset dir="${dirs.release}">
                <include name="plg_twofactorauth_*.zip" />
            </fileset>
        </zipme>

        <delete file="${dirs.release}/CHANGELOG" failonerror="false" quiet="true" />
        <delete file="${dirs.release}/LICENSE.txt" failonerror="false" quiet="true" />
        <delete file="${dirs.release}/pkg_yubikey_plugins.xml" failonerror="false" quiet="true" />

    </target>
	
	<target name="package-yubikeyplus" description="Package build for YubiKeyPlus"
		depends="new-release,setup-properties">

		<copy file="./templates/plg_twofactorauth_yubikeyplus.xml" tofile="${dirs.plugins}/twofactorauth/yubikeyplus/yubikeyplus.xml" overwrite="true">
			<filterchain>
				<replacetokens begintoken="##" endtoken="##">
					<token key="DATE" value="${build.date}" />
					<token key="VERSION" value="${version}" />
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Create the two factor plugin package -->
		<zipme basedir="${dirs.plugins}/twofactorauth/yubikeyplus" destfile="${dirs.release}/plg_twofactorauth_yubikeyplus-${version}.zip" includeemptydirs="true">
			<fileset refid="tfa_yubikeyplus" />
		</zipme>

	</target>

	<target name="package-yubikeytotp" description="Package build for YubiKeyTOTP"
		depends="new-release,setup-properties">

		<copy file="./templates/plg_twofactorauth_yubikeytotp.xml" tofile="${dirs.plugins}/twofactorauth/yubikeytotp/yubikeytotp.xml" overwrite="true">
			<filterchain>
				<replacetokens begintoken="##" endtoken="##">
					<token key="DATE" value="${build.date}" />
					<token key="VERSION" value="${version}" />
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Create the two factor plugin package -->
		<zipme basedir="${dirs.plugins}/twofactorauth/yubikeytotp" destfile="${dirs.release}/plg_twofactorauth_yubikeytotp-${version}.zip" includeemptydirs="true">
			<fileset refid="tfa_yubikeytotp" />
		</zipme>

	</target>

	<target name="package-u2f" description="Package build for U2F"
			depends="new-release,setup-properties">

		<copy file="./templates/plg_twofactorauth_u2f.xml" tofile="${dirs.plugins}/twofactorauth/u2f/u2f.xml" overwrite="true">
			<filterchain>
				<replacetokens begintoken="##" endtoken="##">
					<token key="DATE" value="${build.date}" />
					<token key="VERSION" value="${version}" />
				</replacetokens>
			</filterchain>
		</copy>

		<!-- Create the two factor plugin package -->
		<zipme basedir="${dirs.plugins}/twofactorauth/u2f" destfile="${dirs.release}/plg_twofactorauth_u2f-${version}.zip" includeemptydirs="true">
			<fileset refid="tfa_u2f" />
		</zipme>
	</target>


	<!--
	====================================================================================================
	Tasks - Project management
	====================================================================================================
	-->

	<target name="lang" description="Generate and upload language files">
		<exec command="php ./buildlang.php ${application.startdir}/build.properties ${application.startdir}/.. ${version}" dir="buildlang" passthru="true" />
	</target>
	
	<target name="link" description="Internal linker">
		<exec command="php ../buildfiles/tools/link.php ${application.startdir}/.." dir="${application.startdir}/.." passthru="true" />
		<exec command="php ../buildfiles/tools/langlink.php ${application.startdir}/.." dir="${application.startdir}/.." passthru="true" />
	</target>
	
	<target name="relink" description="Project relinker">
		<exec command="php ../buildfiles/tools/relink.php ${site} ${application.startdir}/.." dir="${application.startdir}/.." passthru="true" />
	</target>
	
	<target name="release" depends="setup-properties" description="Upload the release to AkeebaBackup.com">
		<copy file="./templates/release.json" tofile="${dirs.root}/release.json" overwrite="true">
			<filterchain>
				<replacetokens begintoken="##" endtoken="##">
					<token key="DATE" value="${build.date}" />
					<token key="VERSION" value="${version}" />
					<token key="RELEASEDIR" value="${phing.dir}/${dirs.release}" />
					<token key="REPODIR" value="${phing.dir}/${dirs.root}" />
				</replacetokens>
			</filterchain>
		</copy>

		<exec command="php ${project.basedir}/../../releasemaker/releasemaker/index.php ${project.basedir}/../release.json" dir="${project.basedir}" passthru="true" />

		<delete file="${dirs.root}/release.json" quiet="true" />
	</target>
	
	<target name="ftpdeploy" depends="git">
		<gitversion workingcopy="${dirs.root}" propertyname="git.lastrevision" />
		<!-- Core release -->
		<echo>Uploading release</echo>
		<ftpdeploy
			host="${ftp.host}"
			port="${ftp.port}"
			username="${ftp.username}"
			password="${ftp.password}"
			dir="${ftp.dir}/yubikey/rev${git.lastrevision}"
			mode="${ftp.mode}"
			passive="true"
			level="debug">
			<fileset dir="${dirs.root}">
				<include name="CHANGELOG"/>
			</fileset>			
			<fileset dir="${dirs.release}">
				<include name="pkg_*.zip"/>
			</fileset>			
		</ftpdeploy>
	</target>
	
</project>
